# Добавление шаблонов URL-адресов представлений
#
# Создание файла urls.py для каждого приложения – это наилучший способ
# сделать ваши приложения пригодными для реиспользования в других проектах.

# Далее необходимо вставить шаблоны URL-адресов приложения blog в главные
# шаблоны URL-адресов проекта.

from django.urls import path
from . import views

# В приведенном выше исходном коде определяется именное пространство
# приложения с помощью переменной app_name. Такой подход позволяет упо-
# рядочивать URL-адреса по приложениям и при обращении к ним использовать имя.
app_name = 'blog'

urlpatterns = [
# представления поста

    # С помощью функции path() определяются два разных шаблона.
    # Первый шаблон URL-адреса не принимает никаких аргументов и соотносится с представлением post_list.
    path('', views.post_list, name='post_list'),

    # Второй шаблон соотносится с представлением
    # post_detail и принимает только один аргумент id, который совпадает с целым числом,
    # заданным целым числом конвертора путей int.
    # Для захвата значений из URL-адреса используются угловые скобки.
    # Любое значение, указанное в шаблоне URL-адреса как <parameter>, записывается
    # в качестве строкового литерала. Для конкретного сопоставления и возврата
    # целого числа используются конверторы путей, такие как <int:year>. Например,
    # <slug:post> будет, в частности, совпадать со слагом (строковым литералом,
    # который может содержать только буквы, цифры, подчеркивания или дефисы)
    # Если функции path() и  конверторов будет недостаточно, то вместо них
    # можно использовать re_path(), чтобы определять сложные шаблоны URL-
    # адресов с помощью регулярных выражений Python.
    path('<int:id>/', views.post_detail, name='post_detail'),
]

'''



# 
 
# 

'''